local _ActiveScript
_ActiveScript = coroutine.resume(coroutine.create(function()
	-- Etc Dont Touch
    local Version = '1';
    local function _Noti(Text:string,SoundPlay:boolean?)
        if (SoundPlay or true) == true then
        local Sound = Instance.new(`Sound`)
        Sound.SoundId = `rbxassetid://8486683243`
        Sound.Parent = game:GetService(`SoundService`)
        Sound:Play()
        end
    	game:GetService(`StarterGui`):SetCore(`SendNotification`,{
		Title = `Valerian V{Version}!`;
		Text = Text;
        })
    end

	if (getgenv().Lock_Loaded or false) then
       _Noti(`Reloading Valerian!`,false)
       getgenv().Lock_Loaded = 'Close'
	end
	
    _Noti(`Valerian V{Version} Loaded!`)
	getgenv().Lock_Loaded = true
	
	export type Lock_Config = {
		Lock_Keybind:Enum;
		Enable_Keybind:Enum;
		Offset:number;
	}
    
    getgenv().Config = {
        Lock_Keybind = Enum.KeyCode.T;
        Enable_Keybind = Enum.KeyCode.Y	;
        Offset = 0.45;
    }
	
	--// Configuration
    local Enabled = true;
	local PlayerDirectory = game.Workspace
	local Config:Lock_Config = getgenv().Config
	--// Services
	local Services = {
		RunService = game:GetService(`RunService`);
		Players = game:GetService(`Players`);
		TextChatService = game:GetService(`TextChatService`);
		TweenService = game:GetService(`TweenService`);
		UserInputService = game:GetService(`UserInputService`);
	};
	
	--{Varibles}--
	local SmoothTween:{Time:number,LastTime:number} = {Time = 0.0075,LastTime = 0}
	local Camera = workspace:WaitForChild(`Camera`)
	local Player = Services.Players.LocalPlayer
	local Character:Model = Player.Character or Player.CharacterAdded:Wait()
	local Mouse = Player:GetMouse()
	local Target = nil
    local _Connections = {}
	
	--// Core
	
	local function FindNewTarget()
		for Index,Item in pairs(PlayerDirectory:GetDescendants()) do
			if not Item:IsA(`Model`) then continue end
			if Item == Character then continue end
			if not Item:FindFirstChild(`HumanoidRootPart`) then continue end
            if Item.Name == Character.Name then continue end
			local MouseCFrame = Mouse.Hit
			local EHRP:BasePart = Item:FindFirstChild(`HumanoidRootPart`)
            if not EHRP then continue end
            if not Item:FindFirstChild(`Humanoid`) then return end
			local Range = math.round((EHRP.CFrame.Position-MouseCFrame.Position).Magnitude)
			print(SmoothTween.Time)
			if Range <= 20 then
				Target = Item
                _Noti(`Valerian Locked On To {Target.Name}`)
                break
			end
		end
	end
	
    local function _Disconnect()
       for Index:number,Connection in pairs(_Connections) do
          Connection:Disconnect()
       end
    end

	_Connections['Input'] = Services.UserInputService.InputBegan:Connect(function(Input,GPE)
		if GPE then return end
		if Input.KeyCode == Config.Lock_Keybind then
			if not Target then
				FindNewTarget()
			elseif Target then
				Target = nil
                _Noti(`Unlocked!`)
			end
		elseif Input.KeyCode == Config.Enable_Keybind then
			Enabled = not Enabled
		end
	end)
	
	_Connections['RunService'] = Services.RunService.RenderStepped:Connect(function()
        Config = getgenv().Config
        if getgenv().Lock_Loaded == 'Close' then
           _Disconnect()
           coroutine.close(_ActiveScript)
        end

		if Target then
			if not Enabled then return end
			if not Target:IsA(`Model`) then return end
			if tick() >= SmoothTween.LastTime then
				local EHRP = Target:FindFirstChild(`HumanoidRootPart`)
                local _EHumanoid:Humanoid = Target:FindFirstChildOfClass('Humanoid')
				SmoothTween.LastTime = tick() + SmoothTween.Time
				Camera.CFrame = CFrame.new(Camera.CFrame.Position,(EHRP.Position+((_EHumanoid.MoveDirection or Vector3.new(0.1,0.1,0.1)).Unit*Config.Offset)))
			end
		end
	end)
end))
